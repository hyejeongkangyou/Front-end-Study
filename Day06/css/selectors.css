@charset "utf-8";
/*꼭 세미콜론(;)을 사용해야 함*/
/*! selectors.css, 2016*/
/*CSS 주석*/
/**
 *--------------------------
 * CSS선택자
 * -------------------------
 * 요소 선택자 E
 * 전체 선택자 *
 * 자손 선택자 E(P) E(C)
 * 그룹핑 E,E,E
**/

/**
요소 선택자 E
0001
**/

body {
margin: 0;
/*글자크기 변경*/
font-size:20px;
/*고정 값 px을 상대 값으로 변경하고자 한다면?*/
/*Ctrl+shift+Y를 누르면 font-size의 상대값으로 자동 계산해준다.*/
/*고정 값(기기에 따라 다르다) px을 상대 값(em: equal M)으로 변경하고자 한다면?*/
font-size:1.25em; 
/*20px/16px = x1.25em
 이미지를 x4 큰 이미지 사이즈(224px)로 제작했다
 x1 1/4  
 x2 1/2
 x3 3/4
 x4 4/4
*/
}
/*같은 값이 있다면 아래에 있는 속성이 우선한다.(같은 점수일때)*/

h3{
	/*mt:0 mb:0 + tab*/
margin-top: 0;
margin-bottom: 0;
}

body * {
	margin: 0;
}


/* ------------------
그룹핑 E,E,E
*------------------*/
 
 body, body * {
 	margin: 0;
 }

 /*
* 요소+그룹핑+아이디+전체 선택자
* CSS선택자는 여러 유형이 조합되어 사용된다.
*
*
* #아이디 선택자
* 0100
*
* .클래스 선택자
* 0010
 */

 body, #shopping1*{
	margin:0;
 }

/*자식 선택자 E(P) > E(C)
*>child combinator
*/
/*직계 자식을 가리키는 선택자*/
/*오직 자식에게만 속성이 적용됨. 자손은 안됨*/
#shopping1 > h4{
	color: tan; /*보라색 #7045cf*/
}

/*
id=100점
class=10점
body .sports * {} 스포츠 섹션
*/

 /*
*{} 이런식으로 사용한다면 성능이 저하되어 속도가 느려지게 되므로 가급적 사용 하지 않기
 */


/*
*
* 클래스 선택자 
* E.class-name (디자인 컨셉[범위제한]이 명확하지 않은 경우에는 사용 자제)
* .class-name (일반적으로 사용되는 방법, 코드 재사용 목적)
* .class-name1.class-name2 (멀티클래스)-하나의 요소
* .class.name1 .class-name2 (class.name1에서 class-name2를 찾는다)
*/

.notice{}
.warning{}
.error{}
.success{}

/*<button type="button class="button"> 이 경우 -->  .button{} 을 사용해서 css로 꾸밀 수 있다.*/
/* .button{
	border: none;
	background-color: #000;
	color: #fff;
} 
.button-buy{
	color: orange;
}
.button-cancel-buy{
	color: lime;
}
*/
/*btn-buy.btn.처럼 순서를 바꿀 수 있다( IE6인 경우는 안됨, IE6인 경우에는 순서가 중요하다. )*/
.btn.btn-buy {color: orange;} /*대상이 하나*/
.btn. btn-cancel-buy{color: lime;} /* .btn요소 안의 .btn-cancel-buy라는 클래스를 가진 요소를 찾는다. */
/* 아래의 경우에 스타일이 적용된다. 
<div class="btn">
	<button class="btn-cancel-buy" type="button">Hi</button>
</div>
btn 클래스 안의 요소안에 btn-cancel-buy를 찾아 적용되기 때문에!!
* 만약 button class="btn-cancel-buy" type="button">Hi</button>
일 경우에는 아무 것도 적용되지 않는다.
*/

/*
* -------------------
* 인접 형제 선택자 E + E
* -------------------
*/
.parent ul {
	border: 1px solid red;
}
/*
*인접 형제 선택자 사용시, 주의점!
*절대적으로 틀(프레임)이 무너지지 않아야 한다.
*/
.parent h4 + ul {
	border-color:lightblue;
}
/*
만일 h4의 아래에 다른 요소가 들어가게 되면 .parent h4 + ul {border-color:lightblue;}이 속성이 적용되지 않는다.
<div class="parent">
            <ul><li><a href="">wow</a></li></ul>
            <h4 class="screen_out">상품</h4>
            <div></div>   <--이렇게 다른 요소가 들어와 있을 때
            <ul class="list_img list_goods #content">
*/


/*
*------------------------------
* 일반 형제 선택자 E ~ E
*------------------------------
*/

#shoppingGrpTab > #shopping1 + h3 a { color: darkred; } /*이 경우 div의 직계 h3만을 찾아 적용한다*/
/*[id="shoppingGrpTab"] > [id="shopping1"] + h3 a { color: darkred; }*/
#shoppingGrpTab > #shopping1 ~ h3 a { color: #bd8d46; } /*이 경우 div에 인접한 h3를 모두 찾아 적용한다*/


/*
 * --------------------------------------
 * 속성 선택자
 * [attr]
 * [attr="value"]
 * --------------------------------------
*/

/*ID선택자 = 속성 선택자로 변경*/
/*[id] { border: 2px dashed blue; }
[class] { outline: 3px solid rgba(255,255,0,0.5); }*/

/*특정 ID 선택자를 찾고자 한다면?*/

/*#shopping3 .screen_out{} --> 이 경우 screen_out을 포함하면 되기 때문에 screen_out_oops의 경우에도 적용된다.*/
/*[id="shopping3"] [class$="screen_out"]{
	border: 4px solid #303030;
}*/
#shopping4 [class$="screen_out"] {
	border: 4px solid #303030;
}
/*위의 경우 절대적으로 screen_out으로 클래스가 되어 있어야 적용된다.*/