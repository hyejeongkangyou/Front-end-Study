
/*
부모요소에도 자식요소에도 float을 주게 되면, 무한 궤도에 빠지게 된다.
(권장하지 않는 방식)/ 만일 .page nav img요소에 float을 주게 되면,
그 상위 요소의 height값이 0이 되어 그 상위에도 float을 주게 되어 
계속해서 그 윗 요소들까지 float을 설정하게 된다. 
그러므로 이 방법은 권장하지 않는 방법이다.

.wrapper{
	float:left;
	width: 960px;
	margin-left:auto;
	margin-right:auto;
	background: #eee;
}

.page-nav{float:left;}
.page-nav ul{float:left;}
.page-nav li{float:left;}
.page-nav a{float:left;}
.page-nav img{float:left;}

*/


/*두 번째 방법
의미는 없되, 표현을 위한 목적으로 <div>요소를
설정하여 class="clear"를 설정
float을 끊어버린는 역할.
권장하지 않는다
*/

.clear{
	clear:both;
}

/*세번째 방법
부모요소에 overflow: hidden | auto;
값을 설정하면 자식 요소만큼 높이가 생긴다.
권장하지 않음.

*/


.float-container{
	overflow:hidden;
	overflow:auto;
}


/*네 번째 방법
두번째 방법을 의미적으로 사용할 수 있도록
응용한 방법(권장되는 방식!!)
.clearfix
*/

/* Legacy Method 1 */
/*.clearfix::after{
	content: 'pseudo element';
	display:block;
	clear: both;
	visibility: hidden;
	height:0;

}
*/

/* Legacy method 2 */
/*더 간결한 방식, common.css가에 추가*/
.new-clearfix::after{
	content:'';
	display:block;
	clear:both;
}

.lt-ie8.new-clearfix{
	zoom:1;
}

/* New Method */
/*오페라 브라우저까지 고려한 방식이지만 한국에서는 많이 사용되지 않는다.*/
/*.micro-clearfix::before,
.micro-clearfix::after{
	content:'';
	display:table;
}
.micro-clearfix::after{
	clear:both;
}
*/



.parent{
	/*border: 1px solid hsl(180, 3%, 93%);*/
	/*padding: 1rem;*/
	margin-bottom:2rem;
	background: #efefef;
	/*float:left;*/
	/*height:100px;*/
	width: 720px;
	margin-left: auto;
	margin-right: auto;	
}

.child{
	width: 140px;
	height: 100px;
	text-align:center;
	line-height:100px;
	color: #fff;
	float:left;

}

.child:first-child{background: #3c1323;}

.child:nth-child(2){
	background: #1c4e36;
	height: 140px;}

.child:last-child{background: #15143d;}




